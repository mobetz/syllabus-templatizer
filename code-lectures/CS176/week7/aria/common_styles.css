
nav {
    position: fixed;
    visibility: hidden;
    top: 0;
    bottom: 0;
    background-color: #222;
    width: 200px;

}


/* Just like with HTML, we have a special pattern of symbols that tells
the browser to ignore a block of text. If we open a message with /*, anything
that comes before a matching star and close slash will be treated as a 'comment'. */

body {
    /* Say we wanted to change the background-color of our document.
        It's as easy as using the "background-color" property, and giving it a color! */
    background-color: teal;
    color: white;

    /* If we instead wanted a background image, we could use the background-image
    property:
    background-image: url.("http://path-to-some-image.png")
    */
}

img {
    /* One of the most basic styling rules we can apply is the 'display' rule. This
  changes whether the browser treats a selected element as a block or inline element,
  which inherits all the behaviors we discussed last class.  */
    display: block;

    /*
    Block elements get a few special properties that we can manipulate. The first
    group of these are the 'margin' properties. Margin refers to the amount of
    extra space we should give each element *outside* of the content.
    */
    margin-top: 20px;
    margin-bottom: 20px;

    /* Sometimes, you can also specify 'auto' as a measurement of space. In the case
    of the left and right margins, this will attempt to balance a margin with its
    opposite margin. For a block element, this causes the element to be 'centered'. */
    margin-left: auto;
    margin-right: auto;
}

section {
    color: #ccc;
    background-color: #1f1f1f;

    margin: 1em 3em 1em 2em;
    /*
    In addition to the margin we saw before, we can also set a "padding";
    this is the space *inside the box* that we should set aside as blank.
    */
    padding: 5px 10px 15px 20px;

}

/*
This rule only applies to just the "selectors" section on our web page.
*/
#selectors {
    color: #c99;
}


/*
One last fun rule: we can make it so when we follow an anchor to a specific part
of the page, we 'smooth scroll' there:
*/
html {
    scroll-behavior: smooth;
}






@keyframes fade-in {
    0% {
        background: #222;

        /* padding: 20px; */
    }
    20% {
        color: red;
    }
    40% {
        color: purple;
    }
    100% {
        background: #2a2;
        color: white;
        /* padding: 30px; */
    }
}


@font-face {
    font-family: "Gravity";
    src: url("./fonts/Gravity-Regular.woff")  format("woff");
}

nav {
    font-family: "Gravity";
}


nav a {
    color: azure;
}

img {
    max-width: 60%;
}